/*
Конечно! Инкапсуляция - это как сундук с секретом для данных и функций внутри объекта.

1. **Сундук с секретом для данных**: Представьте, что у вас есть сундук, в котором хранятся важные вещи. Этот сундук называется объектом, а важные вещи - это данные, которые вы хотите скрыть от посторонних глаз. Инкапсуляция позволяет вам положить данные в этот сундук и закрыть его, чтобы никто не мог получить к ним доступ напрямую.

2. **Секретный ключ (геттеры и сеттеры)**: Но что, если вам все же нужно предоставить доступ к этим данным другим людям, но только с вашим разрешения? Вы можете создать секретный ключ, который позволит им получить доступ к данным, но только в том случае, если вы разрешите. Этот секретный ключ называется "геттером" (для чтения данных) и "сеттером" (для изменения данных).

3. **Безопасность**: Теперь ваши данные защищены, и никто не может случайно или неправильно изменить их. Это делает ваш сундук с данными более безопасным и надежным.

4. **Легкость обслуживания**: Представьте, что вы решаете изменить, как хранятся ваши данные внутри сундука. С инкапсуляцией, вы можете изменить внутреннее устройство сундука, но секретный ключ (геттеры и сеттеры) останется тем же самым. Внешний мир не узнает о ваших изменениях, потому что они произошли внутри сундука.

Итак, инкапсуляция - это способ упаковать данные и функции в объект, скрыть их от посторонних, и предоставить контролируемый доступ к ним. Это помогает сделать код более безопасным, легким в обслуживании и защищает ваши данные, как сокровища в сундуке.
 */

class TreasureChest {
  /// Закрытые данные (сокровища) - они недоступны напрямую извне класса
  final List<String> _treasures = [];
  // Геттер для чтения сокровищ
  List<String> get treasures => _treasures;
  // Метод для добавления сокровищ в сундук
  void addTreasure(String treasure) {
    _treasures.add(treasure);
    // print('Сакровище $treasure добавлено в сундук');
  }

  // Метод для извлечения сокровища из сундука
  String retrieveTreasure() {
    if (_treasures.isEmpty) {
      return 'Сундук пуст';
    } else {
      String treasure = _treasures.removeLast();
      // print('Извлечено сакровища: $treasure');
      return treasure;
    }
  }
}

void main() {
  var chest = TreasureChest();
  chest.addTreasure('Золото');
  chest.addTreasure('Камни');
  chest.addTreasure('Алмазы');
  print('Содержимое сундука: ${chest._treasures}');

  var retrievedTreasure = chest.retrieveTreasure();
  print('Извлеченное сокровище: $retrievedTreasure');
  print('Соержимое сундука после извлечение: ${chest._treasures}');
}
